.TH ION 1
.SH NAME
Ion - an X11 window manager
.SH SYNOPSIS
.B ion3
.I "[options]"
.SH "DESCRIPTION"

Ion is a tiling tabbed window manager designed with keyboard users in mind.
 
.SH "OPTIONS"
.TP
.B \-display host:display.screen
X display to manage
.TP
.B \-conffile configfile
Configuration file to use instead of default
.TP
.B \-searchdir dir
Directory to search for configuration files and other scripts
.TP
.B \-oneroot
On X servers with multiple (traditional non-Xinerama) screens, manage only
default screen (root window), not all, as given by the -display option or
in the DISPLAY environment variable.
.TP
.B \-session session_name
Set session name. This option affects where workspace and other save files are
put (~/.ion3/session_name if option set).
.TP
.B \-help
Show help on command line options
.TP
.B \-version
Show version
.TP
.B \-about
Show about text (version, author, license)

.SH BASIC CONCEPTS

This section is an overview of the types objects that appear on an X
display managed by Ion and their relationships in a standard setup. This
information is necessary to understand the operations and availability
of the different key bindings explained below. For a more detailed 
explanation, needed for writing custom bindings configuration files,
see the additional documentation available from the Ion Web page.

The top-level objects that matter in the case at hand are \fBscreens\fP.
They correspond to physical screens. Screens contain \fBworkspaces\fP
(which are a kind of \fBgroup\fP), and \fBclient windows\fP put into full
screen mode. These objects are \fBmultiplexed\fP in the sense that only
one can be displayed at a time.

Workspaces themselves may contain \fBtilings\fP and detached/floating
\fBframes\fP. Tilings themselves contain \fBframes\fP tiled to fill the
screen, and possibly a statusbar or dock. Akin to screens, frames multiplex
other objects, but in this case mostly client window \fBgroups\fP. Most of 
the time, frames are the only trace of Ion you see on the screen. Frames 
may have border decorations, and they have a \fBtab\fP for each multiplexed
object.

\fBQueries\fP are boxes that appear at the bottoms of frames or screens 
to ask you for textual input to execute an action that depends on it.
Most queries support tab-completion.


.SH BINDINGS

These are the default key and pointer bindings. (\fBMod1\fP) depends on your
system. On PC:s with XFree86 it is probably bound to the left Alt key
(\fBAlt_L\fP). On Suns it is usually bound to the diamond keys
(\fBMeta_L\fP, \fBMeta_R\fP). Use \fIxmodmap(1x)\fP to find out.

The string in square brackets after a binding group heading below indicates
the module whose configuration file defines these bindings.

.SS Globally available bindings

.TP
.B Mod1+1, Mod1+2, Mod1+3, Mod1+4, Mod1+5, Mod1+6, Mod1+7, Mod1+8, Mod1+9, Mod1+0
Switch to n:th object (workspace, full screen client window) within current screen.
.TP
.B Mod1+comma, Mod1+period
Switch to next/previous object within current screen.
.TP
.B Mod1+K K
Go to first region demanding attention or previously active one.
.TP
.B Mod1+K T
Clear all tags.
.TP
.B Mod1+Shift+1, Mod1+Shift+2
Go to n:th screen on multihead setup.
.TP
.B Mod1+Shift+comma, Mod1+Shift+period
Go to next/previous screen on multihead setup.
.TP
.B Mod1+F9
Create a new workspace of chosen default type.
.TP
.B F12, Button3 press
Display the main menu.
.TP
.B Button2 press
Display the window list menu.
.TP
.B Mod1+Tab
Forward-circulate focus.
.TP
.B Mod1+K Tab
Backward-circulate focus.
.TP
.B Mod1+K R
Raise focused object, if possible.


.SS Bindings operating on all frames and screens

.TP
.B Mod1+C
Close current object.


.SS Bindings operating on all frames

.TP
.B Mod1+K H, Mod1+K V
Maximize the frame horizontally/vertically.
.TP
.B Button3 press
Display context menu.
.TP
.B Mod1+R
Begin move/resize mode.
.TP
.B Button1 click at tab, Button2 click at tab
Switch the frame to display the object indicated by the tab.
.TP
.B Button1 drag at border, Mod1+Button3 drag
Resize the frame.
.TP
.B Mod1+Button1 drag
Move the frame.
.TP
.B Button1 drag at tab, Button2 drag at tab
Move objects between frames by dragging and dropping the tab.


.SS Bindings operating on top-level (non-transient) frames and screens

.TP
.B Mod1+T
Toggle tag of current object.
.TP
.B F1
Query for manual page to be displayed.
.TP
.B Mod1+F1
Show the Ion manual page.
.TP
.B F2
Run a terminal emulator.
.TP
.B F3
Query for command line to execute.
.TP
.B Mod1+F3
Query for Lua code to execute.
.TP
.B F4
Query for host to connect to with SSH.
.TP
.B F5
Query for file to edit.
.TP
.B F6
Query for file to view.
.TP
.B F9
Query for workspace to go to or create a new one.
.TP
.B Mod1+G
Query for a client window to go to.
.TP
.B Mod1+M
Display context menu.
.TP
.B Mod1+K D
Detach (float) or reattach an object to its previous location.


.SS Bindings operating on top-level (non-transient) frames

.TP
.B Mod1+A
Query for a client window to attach.
.TP
.B Mod1+K 1, Mod1+K 2, Mod1+K 3, Mod1+K 4, Mod1+K 5, Mod1+K 6, Mod1+K 7, Mod1+K 8, Mod1+K 9, Mod1+K 0
Switch to n:th object within the frame.
.TP
.B Mod1+K N, Mod1+K P
Switch to next/previous object within the frame.
.TP
.B Mod1+K comma, Mod1+K period
Move current object within the frame left/right.
.TP
.B Mod1+K H, Mod1+K V
Maximize the frame horizontally/vertically.
.TP
.B Mod1+K A
Attach tagged objects to this frame.


.SS Bindings for floating/detached frames

.TP
.B Button1 double click at tab
Toggle shade mode
.TP
.B Button1 press at tab, Button1 press at border, Mod1+Button1 click
Raise the frame.
.TP
.B Mod1+Button3 click
Lower the frame.
.TP
.B Button1 drag at tab
Move the frame.
.TP
.B Mod1+K B
Tile frame, if no tiling exists on the workspace


.SS Bindings for tilings and tiled frames [mod_tiling]

.TP
.B Mod1+S
Split current frame vertically.
.TP
.B Mod1+P, Mod1+N, Mod1+Tab, Mod1+K Tab
Go to frame above/below/right/left of current frame.
.TP
.B Mod1+K S
Split current frame horizontally.
.TP
.B Mod1+K X
Destroy current frame.

.\"?

.SS Bindings for client windows

.TP
.B Mod1+L
Nudge the client window. This might help with some programs' resizing problems.
.TP
.B Mod1+K C
Kill client owning the client window.
.TP
.B Mod1+K Q
Send next key press to the client window. Some programs may not allow this by default.

.TP
.B Mod1+Return
Toggle client window group full-screen mode


.SS Move/resize mode bindings

.TP
.B Escape
Cancel the resize mode.
.TP
.B Return
End the resize mode.
.TP
.B Left, Right, Up, Down, F, B, P, N
Grow in specified direction.
.TP
.B Shift+Left, Shift+Right, Shift+Up, Shift+Down, Shift+F, Shift+B, Shift+P, Shift+N
Shrink in specified direction.
.TP
.B Mod1+Left, Mod1+Right, Mod1+Up, Mod1+Down, Mod1+F, Mod1+B, Mod1+P, Mod1+N
Move in specified direction.


.SS Bindings for message boxes and queries [mod_query]

.TP
.B Escape, Control+G, Control+C
Close the query/message box, not executing bound actions.
.TP
.B Control+U, Control+V, Page_Up, Page_Down
Scroll the message or completions up/down.


.SS Bindings for editing in queries [mod_query]

These bindings are similar to those of the \fIjoe(1)\fP text editor.
Cut, copy and paste works in a more conventional manner, though, but
the keys are equivalent.

.TP
.B Control+F, Control+B, Right, Left
Move one character forward/backward.
.TP
.B Control+E, Control+A, End, Home
Go to end/beginning.
.TP
.B Control+X, Control+Z
Skip one word forward/backward.
.TP
.B Control+D, Delete
Delete next character.
.TP
.B BackSpace, Control+H
Delete previous character.
.TP
.B Control+W, Control+O
Delete one word forward/backward.
.TP
.B Control+J
Delete to end of line.
.TP
.B Control+Y
Delete the whole line.
.TP
.B Control+T
Transpose characters.
.TP
.B Control+P, Control+N, Up, Down, Control+Up, Control+Down
Select next/previous (matching) history entry.
.TP
.B Button2 click, Control+K C
Paste from the clipboard.
.TP
.B Control+K B
Set mark/begin selection.
.TP
.B Control+K Y
Cut selection.
.TP
.B Control+K K
Copy selection.
.TP
.B Control+K G
Clear mark/cancel selection.
.TP
.B Tab, Shift+Tab, Control+Tab
Try to complete the entered text or cycle through completions.
.TP
.B Control+R, Control+S
Complete from history
.TP
.B Control+M, Return, KP_Enter
Close the query and execute bound action.


.SS Bindings for menus [mod_menu]

.TP
.B Escape, Control+G, Control+C, Left
Close the menu.
.TP
.B Return, KP_Enter, Control+M, Right
Activate current menu entry.
.TP
.B Control+N, Control+P, Up, Down
Select next/previous menu entry.
.TP
.B BackSpace
Clear the menu's typeahead find buffer.



.SH FILES AND DIRECTORIES
.TP
.B /etc/ion3plus/cfg_ion.lua
System default main configuration files
.TP
.B /etc/ion3plus/cfg_*.lua
Other configuration files.
.TP
.B /etc/ion3plus/look_*.lua
Colour scheme configuration files
.TP
.B ~/.ion3/
User configuration files
.TP
.B ~/.ion3/cfg_ion.lua
User default main configuration file (overrides system default)

.SH SEE ALSO
The Ion home page, \fIhttp://iki.fi/tuomov/ion/\fP
.PP
The document "Configuring and extending Ion3 with Lua" found on the
Ion home page.
.PP
.I //usr/local/ion-3plus/share/doc/ion3plus/
.PP
\fIX(7x)\fP, \fIpwm3(1)\fP, \fIjoe(1)\fP

.SH AUTHOR
Ion was written by Tuomo Valkonen <tuomov at iki.fi>.
